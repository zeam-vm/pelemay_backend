# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# CI 

name: Elixir CI (NodeActivator)

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ "main", "develop" ]
    paths:
      - 'utilities/node_activator/**'
      - '!utilities/spawn_co_elixir/**'
      - '!benchmarks/distributed_computing_bench/**'
      - '!.github/workflows/*'
      - '.github/workflows/ci_node_activator.yml'
      - '.github/workflows/reusable_ci.yml'
      - '.github/workflows/constants.yml'
      - '!**/*.md'
      - '!**/LICENSE*'
      - '!*.md'
      - '!*.cff'
      - '!LICENSE*'
      - '!publish.exs'
  push:
    branches: [ "main", "develop" ]    
    paths:
      - 'utilities/node_activator/**'
      - '!utilities/spawn_co_elixir/**'
      - '!benchmarks/distributed_computing_bench/**'
      - '!.github/workflows/*'
      - '.github/workflows/ci_node_activator.yml'
      - '.github/workflows/reusable_ci.yml'
      - '.github/workflows/constants.yml'
      - '!**/*.md'
      - '!**/LICENSE*'
      - '!*.md'
      - '!*.cff'
      - '!LICENSE*'
      - '!publish.exs'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  constants:
    name: Constants
    runs-on: ubuntu-latest
    outputs:
      matrix-for-check: ${{ steps.set-matrix-for-check.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix-for-check
        run: |
          json=$(cat ${{ github.workspace }}/.github/workflows/matrix_check.yml | ruby -ryaml -rjson -e 'puts JSON.pretty_generate(YAML.load(STDIN))' | jq -c)
          echo "matrix=${json}" >> $GITHUB_OUTPUT
  check:
    name: Check NodeActivator
    needs: constants
    uses: ./.github/workflows/reusable_ci.yml
    with:
      working-directory: utilities/node_activator
      matrix: ${{ needs.constants.outputs.matrix-for-check }}
      perform-check: true
